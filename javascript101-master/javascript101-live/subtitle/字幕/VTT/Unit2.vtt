WEBVTT
00:00:00,000 --> 00:00:12,000
哈囉，大家好，我是凱迪
歡迎來到javaScript程式設計新手村
00:00:12,000 --> 00:00:14,000
在27單元我們將討論前端開發面試常見問題研討
00:00:14,000 --> 00:00:20,000
首先介紹一下
我們這個單元的大鋼
00:00:20,000 --> 00:00:25,000
首先我們會介紹面試前的準備
前端面試的概論
00:00:25,000 --> 00:00:30,000
那還有
前端常見問題研討
00:00:30,000 --> 00:00:38,000
首先我們來探討面試前的準備
很多學員可能是第一次參加技術的面試
00:00:38,000 --> 00:00:42,000
事實上技術的面試
跟一般的面試事實上是比較不一樣的
00:00:42,000 --> 00:00:47,000
可能有些同學過去是
就是文學院或商管學院
00:00:47,000 --> 00:00:55,000
過去參與一些公司的實習
或是一些行銷企劃案的實習機會
00:00:55,000 --> 00:01:00,000
那事實上技術面試跟
以上提到的一些職位
00:01:00,000 --> 00:01:05,000
面試的過程中有許多不一樣
其中一個蠻重要的環節是
00:01:05,000 --> 00:01:10,000
在技術面試有一個很重要就是
可能需要當場寫程式
00:01:10,000 --> 00:01:23,000
或有許多技術上面的討論跟問答
這是跟一般的商管的或是一般的業務阿
00:01:23,000 --> 00:01:33,000
行銷相關的工作機會是比較不一樣的面談
那在面談之前事實上
00:01:33,000 --> 00:01:37,000
是有一些準備工作是要去做的
我們可以這樣講，
00:01:37,000 --> 00:01:46,000
就是說
事實上一個好的求職過程是包含面試前的準備
00:01:46,000 --> 00:01:51,000
面試中 面談中的一些對答
再來就是結束後的一些
00:01:51,000 --> 00:01:55,000
和面試官也好，
或是 跟人資也好的應對進退
00:01:55,000 --> 00:02:01,000
這是整個
一個面試蠻重要的環節
00:02:01,000 --> 00:02:07,000
就主要包括這三個部分
首先我們來探討面試前的準備
00:02:07,000 --> 00:02:12,000
在技術面試的話，事實上
一般的技術面試
00:02:12,000 --> 00:02:19,000
蠻重要是強調技術的扎實度和技術的吻合度
00:02:19,000 --> 00:02:29,000
所以蠻建議大家經營自己的技術部落格
或參與開放原始碼的專案或社群
00:02:29,000 --> 00:02:36,000
follow整個社群有什麼新技術可以嘗試
00:02:36,000 --> 00:02:42,000
因為在這個領域尤其是前端
00:02:42,000 --> 00:02:44,000
可能有聽過前端摩爾定律
00:02:44,000 --> 00:02:49,000
每半年就有很多新的技術和框架出來
00:02:49,000 --> 00:02:59,000
唯有保持敏銳持續觀察才能在這個行業進步專業能力
00:02:59,000 --> 00:03:02,000
淨化自己的網路資訊
00:03:02,000 --> 00:03:09,000
很多學員可能在很多社群網路facebook、plurk、twitter
00:03:09,000 --> 00:03:12,000
發一些心情抒發的訊息
00:03:12,000 --> 00:03:20,000
但現在透過一些管道，人資或面談主管
00:03:20,000 --> 00:03:26,000
透過網路去搜尋社群網站一些相關資料
00:03:26,000 --> 00:03:32,000
如果這些資料對你不是有正面加分的話就盡量避免
00:03:32,000 --> 00:03:50,000
累積簡歷上的作品，包括學校競賽、打工實習、自己接案子
00:03:50,000 --> 00:03:57,000
這些都是佐證你能力蠻重要的重點
00:03:57,000 --> 00:04:06,000
有些公司要求比較嚴謹，大型的網路公司
00:04:06,000 --> 00:04:10,000
科技公司，包括facebook、google
00:04:10,000 --> 00:04:21,000
等等，除了前端的相關技術之外也很要求軟體工程的專業技術
00:04:21,000 --> 00:04:31,000
所以盡可能去累積自己軟體工程相關知識，如果要挑戰這些
企業的話是必須的
00:04:31,000 --> 00:04:40,000
這裡提到了一些網站
00:04:40,000 --> 00:04:43,000
有些面談可能要你寫程式
00:04:43,000 --> 00:04:47,000
包括演算法、資料結構相關的一些題目
00:04:47,000 --> 00:05:04,000
蠻鼓勵大家利用線上的這些平台
00:05:04,000 --> 00:05:08,000
這有點像是工程師的GRE
00:05:08,000 --> 00:05:14,000
GRE就是你可能要出國留學英文的測試
00:05:14,000 --> 00:05:20,000
這裡有列出了一些資料結構、演算法的相關問題
00:05:20,000 --> 00:05:27,000
你可以點選比較簡單的題目先開始
00:05:27,000 --> 00:05:33,000
它裡面有一些題目，這邊看到是通過率
00:05:33,000 --> 00:05:39,000
我們這邊可以選擇javascript因為在前端開發
比較重要是javascropt這個程式語言
00:05:39,000 --> 00:05:51,000
在這個練習可以學祥api和資料結構演算法
的相關知識
00:05:57,000 --> 00:06:00,000
接下來介紹前端面試的概論
00:06:00,000 --> 00:06:07,000
在前端工程師的職位，他的光譜非常大
00:06:07,000 --> 00:06:16,000
有比較偏向設計，也有偏向軟體工程師的範疇
00:06:16,000 --> 00:06:25,000
在一些大型的IT或網路公司，通常視前端工程師為
軟體工程師
00:06:25,000 --> 00:06:38,000
前端工程師只是一個領域，他們希望部是哪種工程師
都能快速上手該領域的專業知識
00:06:38,000 --> 00:06:47,000
所以足夠solid的一些知識也是足夠必須要求的
00:06:47,000 --> 00:06:54,000
所以建議學員定位自己比較希望往哪發展
00:07:15,000 --> 00:07:19,000
都沒有關係，找好自己的定位
00:07:19,000 --> 00:07:27,000
相信你在面試工程師的時候，都會對你職涯有幫助
00:07:27,000 --> 00:07:36,000
不同公司對前端工程師有不同要求
00:07:36,000 --> 00:07:48,000
 大家可以去人力銀、104
00:07:48,000 --> 00:07:55,000
或者是去你感興趣的公司
00:07:55,000 --> 00:08:05,000
一些招募招聘的一些資訊，看一下說有沒有招募前端工程師
00:08:05,000 --> 00:08:12,000
他在前端工程師的要求是怎樣的情況
00:08:12,000 --> 00:08:26,000
可以印出來看看那些我還不具備
00:08:26,000 --> 00:08:36,000
相信大家能夠進到理想公司，獲得理想工作的機會
00:08:36,000 --> 00:08:39,000
我們先來看F公司
00:08:39,000 --> 00:08:43,000
F公司有四點重要要求
00:08:43,000 --> 00:08:53,000
3年的javascript經驗，非同步programming經驗
00:08:53,000 --> 00:09:03,000
我們在課堂提到ajax非同步，promise、closure
types；ES6
00:09:03,000 --> 00:09:17,000
F公司主要是用React當一個蠻重要的library
00:09:17,000 --> 00:09:32,000
第3點就是提到3年以上HTML。CSS相關經驗
包括排版、specificity權重，還有跨瀏覽器的一些資源
00:09:32,000 --> 00:09:40,000
還有就是API還有就是優化的相關經驗
00:09:40,000 --> 00:09:43,000
這是F公司前端的徵才文
00:09:43,000 --> 00:09:47,000
這是Y公司前端的徵才文
00:09:47,000 --> 00:09:56,000
同樣也是希望computer science的相關領域
00:09:56,000 --> 00:10:24,000
你有一些作品或一些開放原始碼的經驗，或一些令人驚艷
的特質，我們不要被這些明訂的標準限制住
00:10:24,000 --> 00:10:38,000
有時候這些要求只是理想的，不一定要符合這些要求才能進
到這家公司服務
00:10:38,000 --> 00:10:52,000
還有就是對server side程式語言，包括PHP，nodejs，jQuery
之類的framework的一些了解
00:10:52,000 --> 00:10,59,000
還有像是bootstrap、pure之類framework的一些了解
00:10:59,000 --> 00:11:03,000
還有一些次是工具，這是Y公司的前端徵才文
00:11:03,000 --> 00:11:12,000
P公司的javascript的使用經驗
00:11:12,000 --> 00:11:18,000
還有跨瀏覽器，還有response design的相關經驗
00:11:18,000 --> 00:11:26,000
接下來講一下一般技術面式的流程
00:11:26,000 --> 00:11:32,000
面試的結果很多和事前和事後的準備是有關的
00:11:32,000 --> 00:11:38,000
通常技術面試會分為四部分
00:11:38,000 --> 00:11:45,000
簡歷審核，內推就是可能用內部推薦的方式
00:11:45,000 --> 00:11:48,000
校園招募啊，社會招募，或獵人頭公司
00:11:48,000 --> 00:11:54,000
獲取一些機會的管道
00:11:54,000 --> 00:12:02,000
通常簡歷通過的話會有phone interview
00:12:02,000 --> 00:12:09,000
所謂phone interview可能透過電話、skype、google handout
都有可能
00:12:09,000 --> 00:12:16,000
通常會要求自我介紹並問一些基本的技術問題
00:12:16,000 --> 00:12:30,000
有可能用codebunk或codepad去使用
00:12:30,000 --> 00:12:37,000
在使用過程中面試官也會同步看到你coding的畫面
00:12:37,000 --> 00:12:49,000
在你打的時候面試官會出題目，同步看到你編寫的過程
00:12:49,000 --> 00:12:57,000
去評斷你寫程式的能力
00:12:57,000 --> 00:13:07,000
另一種事前出一份作業，在一定的時間內回傳
00:13:07,000 --> 00:13:10,000
去評斷你的能力到底怎樣
00:13:10,000 --> 00:13:16,000
如果通過phone interview和前測就會受邀參加
onsite interview
00:13:16,000 --> 00:13:26,000
onsite interview就是到公司跟資深工程師、PM、人資去做面談
00:13:26,000 --> 00:13:34,000
通常會有兩部分的題目，包括behavior就是你的人格特質
00:13:34,000 --> 00:13:41,000
或者是對你過去的一些考核和檢驗
00:13:41,000 --> 00:13:45,000
另外蠻重要就是techinical的測驗
00:13:45,000 --> 00:13:49,000
包括紙筆測驗或是問答
00:13:49,000 --> 00:13:53,000
可能有些同學有聽過白板題
00:13:53,000 --> 00:13:58,000
就是在白板上直接寫出程式碼，和面試官討論
00:13:58,000 --> 00:14:06,000
很順利通過這些關卡的話，會有HR interview
00:14:06,000 --> 00:14:12,000 
待會也會介紹相關的細節
00:14:12,000 --> 00:14:21,000
主要聊一些公司文化阿或薪資待遇的議題
00:14:21,000 --> 00:14,26,000
首先，前端問題的一些研討
00:14:26,000 --> 00:14:35,000
這裡提供三個連結，是有關面試的常見問題
00:14:35,000 --> 00:14:40,000
有些有參考的解決方法，有些沒有
00:14:40,000 --> 00:14:50,000
去檢查有那些是我們不足或不理解的
00:14:50,000 --> 00:14:56,000
是一個road map的方式讓大家理解哪裡還不足
00:14:56,000 --> 00:15:01,000
大家點擊進去就可以看到了
00:15:01,000 --> 00:15:11,000
這裡有繁體中文簡體中文和英文版
00:15:11,000 --> 00:15:15,000
比較建議看英文版的部分，因為他是有持續在更新的
00:15:15,000 --> 00:15:20,000
如果不習慣的話可以去看繁體中文或簡體中文都是可以的
00:15:20,000 --> 00:15:25,000
我們看到上面有很多前端相關的問答
00:15:25,000 --> 00:15:28,000
這裡面還又一些延伸閱讀，大家可以參考一下
00:15:28,000 --> 00:15:36,000
首先在面試過程通常都會自我介紹
00:15:36,000 --> 00:15:47,000
包括自己的工作經驗、學經歷、為什麼要加入這個團隊
、能有什麼貢獻
00:15:47,000 --> 00:15:53,000
通常有些外商公司會希望你用英文自我介紹，或用英文問答
00:15:53,000 --> 00:15:58,000
這些都是可以在事前做一些模擬跟準備的 
00:15:58,000 --> 00:16:12,000
HTML的問題，我們列出來的問題過去都有提到
如果學員有映像的話
00:16:12,000 --> 00:16:30,000
課程之前有埋下一些伏筆，前端面試相關問題，如果當下學不清楚的話
沒有關係，這編列了一些重點
00:16:30,000 --> 00:16:42,000
可以去回憶過去學得有沒有熟悉再去做補強查詢
00:16:42,000 --> 00:16:50,000
首先是確保知道什麼是doctype
00:16:50,000 --> 00:16:56,000
我們之前講過，用一句話講的話，就是讓瀏覽器知道你的版本是什麼
00:16:56,000 --> 00:17:02,000
我們在html5已經簡化這樣的一個過程
00:17:02,000 --> 00:17:09,000
可以這樣去宣告HTML的版本
00:17:09,000 --> 00:17:18,000
那如果用舊的版本或沒有宣告的話，瀏覽器可能會出現一些問題，
大家注意一下
00:17:18,000 --> 00:17:20,000
HTML5有哪些語意標籤呢?
00:17:20,000 --> 00:17:31,000
在這邊可以看到一些語意標籤，我們過去可能div、span這些標籤
但這些只是排版
00:17:31,000 --> 00:17:42,000
這裡包括header、footer，footer就是關於版權說明阿或加入我們
之類的東西
00:17:42,000 --> 00:17:50,000
這個就是語意標籤，就是搜尋引擎檢索，讓你頁面更語意化的一種
方式
00:17:50,000 --> 00:18:04,000
javascript引入，之前我們講過盡量在body關掉之前
00:18:04,000 --> 00:18:08,000
這邊可以看到script的引入
00:18:08,000 --> 00:18:18,000
如果dom還沒載入完就引入的話，會造成一些問題
00:18:18,000 --> 00:18:20,000
那這邊要特別注意
00:18:20,000 --> 00:18:26,000
那form表單有post和get之前講過
00:18:26,000 --> 00:18:28,000
http的方法比較常見有post跟get
00:18:28,000 --> 00:18:40,000
get的話就是寄明信片，內容都會被看到
就會顯示在網址上面，你的資料傳遞
00:18:40,000 --> 00:18:47,000
那post的話就不是了，他會在http的內容裡面
00:18:47,000 --> 00:18:57,000
比較建議登入登出用post的方法處理
00:18:57,000 --> 00:19:11,000
事實上我們可以搜尋，在query這裡就是我們get方法的
00:19:11,000 --> 00:19:20,000
項，這個的話我們就知道是get方法，蠻明顯的例子
00:19:20,000 --> 00:19:27,000
那HTML5離線儲存，我們之前在local storage 、session storage
有講過
00:19:27,000 --> 00:19:32,000
那大家可以再去比較一下session、localstorage、cookie
之間的差別
00:19:32,000 --> 00:19:36,000
css 基礎知識的掌握
00:19:36,000 --> 00:19:41,000
這個部分我們講過怎麼用css兩籃式的排版
00:19:41,000 --> 00:19:53,000
大家可以回憶一下，像是position相對定位絕對定位、float方式、flexbox
00:19:53,000 --> 00:20:00,000
這邊有蠻不錯的一個網站大家可以去看一下
00:20:00,000 --> 00:20:07,000 
這是css版面配置的一個練習網站
00:20:07,000 --> 20:15:00,000
這裡介紹了css版面配置的所有知識都在裡面
00:20:15,000 --> 00:20:17,000
鼓勵大家可以去看一下
00:20:17,000 --> 00:20:21,000
什麼是css選擇器，我們也講過
00:20:21,000 --> 00:20:25,000
最簡單的說法就是選擇器和你要改變的宣告
00:20:25,000 --> 00:20:32,000
你選到什麼元素，你要改變它的顏色或背景
00:20:32,000 --> 00:20:50,000
pseudo class是什麼呢?pseudo-classes是，之前我們滑進跟點選
的冒號後面有一個state說明點擊還是滑進的狀況
00:20:50,000 --> 00:20:55,000
這些就是pseudo class的一些相關概念
00:20:55,000 --> 00:20:58,000
css選擇器有很多，大家可以在去複習一下
00:20:58,000 --> 00:21:13,000
那box model的話，再css有講過，我們講過空城計的例子
就是說，我們有content，padding，border跟margin
00:21:13,000 --> 00:21:26,000
這樣去定義我們內容、距離、或留白寬度
00:21:26,000 --> 00:21:34,000
這個box model大家可以去css在仔細的研究一下
00:21:34,000 --> 00:21:37,000
那什麼是css sprites呢?
00:21:37,000 --> 00:21:51,000
css sprites是一個實務上蠻常用的觀念，他是，為什麼要用css sprites
呢?
00:21:51,000 --> 00:21:58,000
前端開發效能的優化是蠻重要的
00:21:58,000 --> 00:22:09,000
當你送出一個request請求到你server side或其他地方
00:22:09,000 --> 00:22:13,000
請求資源都會造成資源的消耗
00:22:13,000 --> 00:22:25,000
如果一個站點，如果我們圖片很多的話，大家還記得嗎?
src
00:22:25,000 --> 00:22:28,000
在 image裡面src
00:22:28,000 --> 00:22:35,000
如果說
00:22:46,000 --> 00:23:00,000
如果我們很多圖片都用src去送出請求，會影響前端頁面的效能
00:23:00,000 --> 00:23:06,000
所以我們就衍生出css sprites的技術
00:23:06,000 --> 00:23:15,000
大家可能有看過，把好多圖片和成一張圖片
00:23:19,000 --> 00:23:27,000
可以看到這邊 大家可能有看過，把好多圖片和成一張圖片
00:23:27,000 --> 00:23:33,000
那這樣每次只要載入一張圖片
00:23:33,000 --> 00:23:38,000
那我們再用css定位的方法，這邊有個例子
00:23:38,000 --> 00:23:43,000
這邊有個例子，這邊有張圖片這樣子
00:23:45,000 --> 00:23:49,000
這邊有張圖片，回首頁、上一頁、下一頁
00:23:49,000 --> 00:23:53,000
這是合併成一張圖片，事實上他是三個icon
00:23:53,000 --> 00:24:02,000
大家可以看到，也就是說使用上就只要載入一張圖片就好，
我們可以用css手法
00:24:02,000 --> 00:24:06,000
也就是這裡image id=home然後#id name嗎
00:24;06,000 --> 00:24:12,000
這邊就用url  background去載入想要的圖片
00:24:12,000 --> 00:24:20,000
那我們這裡用 0  0
00:24:26,000 --> 00:24:30,000
那我們這裡用 0  0的圖片，我們就可以看到說，調整一下會怎樣
00:24:47,000 --> 00:24:53,000
可以看到說我這邊圖片都一直在改變
00:24:53,000 --> 00:24:57,000
可以看到位置
00:25:15,000 --> 00:25:26,000
大家有發現嗎?我去調整的話可以看到圖片的一些變動
00:25:26,000 --> 00:25:42,000
透過這樣的方式我們可以再同一張圖對我們想要的圖片
00:25:42,000 --> 00:25:56,000
通常我們這樣使用太麻煩了，所以通常會用這樣的工具，
css sprite generator
00:25:56,000 --> 00:26:19,000
你把你想要的圖片放進來，這裡可以載入圖片，案download
他就會出現html css相關的資訊
00:26:19,000 --> 00:26:23,000
你可以複製這個，她就幫你定位好，你就不須自己去手動定位
00:26:23,000 --> 00:26:34,000
這就非常方便，你有這六張圖，她就幫你定位icon這樣子
00:26:38,000 --> 00:26:45,000
那最後一個css比較需要掌握的重點就是RWD的設計
00:26:45,000 --> 00:26:28,000
RWD全名叫response web deaign
00:26:28,000 --> 00:26:53,000
也被稱為自適應設計或響應式設計
00:26:53,000 --> 00:27:14,000
主要的概念就是，透過css設計，讓在不同device螢幕大小
的是使用者享受到最好的體驗
00:27:14,000 --> 00:27:21,000
我們可以看一下這邊
00:27:25,000 --> 00:27:27,000
網路上有些response design的範例
00:27:38,000 --> 00:28:00,000
大概會長這樣子，會跟著螢幕大小，通常我們會有一個
叫media query的語法判斷
00:28:00,000 --> 00:28:11,000 
他會去偵測大小，去偵測使用者最舒服的一個方式
00:28:11,000 --> 00:28:18,000
像這個本來340的畫面就變成140
00:28:18,000 --> 00:28:27,000
蠻適合去閱讀的，這就是response design的情境
00:28:27,000 --> 00:28:43,000
有很多小細節，就像這裡google設計師就有教人怎麼做response
design
00:28:43,000 --> 00:29:00,000
這邊有動畫，大家可以拉動瀏覽器，當不同螢幕大小，會有不同畫面的
產生
00:29:00,000 --> 00:29:11,000
我們可以看到有些重要的設計，像是這裡viewport參數
00:29:30,000 --> 00:29:35,000
還有這裡media query螢幕大小在500到600之間
這些元素要怎麼設計
00:29:35,000 --> 00:29:43,000  
大家可以參考一下其他學習資源
00:29:43,000 --> 00:29:49,000
接下來要講一下，javascript比較重要的觀念
00:29:49,000 --> 00:30:04,000
包括javascript的型別轉換，大家可以想，包括字串怎麼轉成數值、
使用pass integer或者是用number把字串丟進去
00:30:04,000 --> 00:30:10,000
這樣的一些方法就可以做型別轉換
00:30:10,000 --> 00:30:17,000
也要注意字串和數字相加會怎樣，大家可以嘗試看看
00:30:17,000 --> 00:30:23,000
這裡先往下看
00:30:23,000 --> 00:30:38,000
scope生存域，講過的javascript是function scope也就是會存活在
function之間，如果離開function就會結束生存
00:30:38,000 --> 00:30:42,000
注意包括var、const、let的一些用法
00:30:42,000 --> 00:30:47,000
怎樣用javascript建構函式去new物件?
00:30:47,000 --> 00:31:00,000
這在物件的單元就又講了，大家不熟悉的話再去複習
包括prototype怎樣建置，還有繼承的一些觀念
00:31:00,000 --> 00:31:09,000
大家再去複習一下關於物件的重點，面試很有可能出現
00:31:09,000 --> 00:31:32,000
apply/call這牽扯到this用法，前面也講過四五種用法
包括指到物件
00:31:32,000 --> 00:31:37,000
要注意到apply後面是接陣列，call是直接塞進去
00:31:37,000 --> 00:31:43,000
大家忘記的話再去複習之前的內容
00:31:47,000 --> 00:32:11,000
那氣泡傳遞在你在觸發事件的時候，氣泡傳遞在第三個參數
第一個是事件名稱包括click
00:32:11,000 --> 00:32:23,000
或double click，中間是event handler名稱﹑第三個就是傳遞方式
00:32:23,000 --> 00:32:40,000
false就是氣泡傳遞，氣泡傳遞就是就是觸發的地方往外傳
00:32:40,000 --> 00:32:46,000
什麼是ajax呢，我們在非同步處理有提到
00:32:46,000 --> 00:32:59,000
promise就是在解決回掉地獄，非同步處理，處理完可以做其他事情
00:32:59,000 --> 00:33:19,000
DOM一些基礎操作，包括document去做一些新增刪除元素，
搭配事件處理操作
00:33:19,000 --> 00:33:26,000
這裡有延伸閱讀，家有興趣可以參考一下
00:33:26,000 --> 00:33:36,000
裡面有javascript常見的面試題目，包括closure的觀念，有時也會在面
談出現
00:33:36,000 --> 00:33:42,000
在之前的單元也有提到，可以再複習
00:33:42,000 --> 00:33:48,000
除了一些前端三劍客比較基礎的問題
00:33:48,000 --> 00:34:01,000
面談時也會問到其餘的一些問題，包含
你用過那些框架或函式庫，優點缺點是什麼呢
00:34:01,000 --> 00:34:16,000
你可能講你用過react這個library，他是facebook的library
是跨平台開發
00:34:16,000 --> 00:34:40,000
他提出了現在前端的一些主流技術，包括component
virtual dom，跨平台的方式都是他一些優點
00:34:40,000 --> 00:34:52,000
缺點相對學習門檻比較高一點
00:34:52,000 --> 00:35:03,000
前端優化，像剛剛css sprites也是某種程度優化
00:35:03,000 --> 00:35:26,000
在瀏覽器timeline我們可以去看那些script、那些元素是最花時間的
00:35:37,000 --> 00:36:03,000
這裡可以看一下，哪個可能佔去最多時間，我們就可以知道怎麼去優化
00:36:03,000 --> 00:36:15,000
除了css sprites還有像是CDN css javascript壓縮
00:36:15,000 --> 00:36:16,000
這些都是前端優化的方法
00:36:16,000 --> 00:36:21,000
大家可以去網路上或找書來看
00:36:21,000 --> 00:36:24,000
瀏覽器在載入頁面發生什麼呢?
00:36:24,000 --> 00:36:34,000
這是一個蠻全面的探討，這有比較簡單的講法，也有複雜的
00:36:34,000 --> 00:37:19,000
我們可以看成說當輸入網址十，會交給DNS域名解釋，轉換成ip位置
像這個位置的server發出請求，在請求後，後台會做一些處理
00:37:19,000 --> 00:37:46,000
如果是靜態網頁他就直接吐回html css javascript，在瀏覽器接
下來就會組裝起來做一些解析，繪製出相應的結構
00:37:46,000 --> 00:38:36,000 
大家可以參考這個網頁，是比較複雜的講法
00:38:36,000 --> 00:38:57,000
我們可以看一下這邊，他會經過這樣的過程，結合成DOM tree
00:38:57,000 --> 00:39:36,000
最後他會進行browser render pipeline的管道，最終呈現給使用者
00:39:36,000 --> 00:40:08,000
包括怎麼跟設計師溝通，或最近有什麼前端的新技術
00:40:08,000 --> 00:40:14,000
最後通常會有面試官問你有沒有問題要問我們
00:40:14,000 --> 00:41:10,000
鼓勵大家在事前做功課，包括團隊新聞，事實的提出見解或看法詢問
00:41:10,000 --> 00:41:35,000
在結束技術面試後，通常有HR的面談
00:41:35,000 --> 00:42:15,000
在這個單元中我們提到面試前準備等等
00:42:15,000 --> 00:42:18,000
最後還是鼓勵大家像是github等等，都是在未來有些幫助 













